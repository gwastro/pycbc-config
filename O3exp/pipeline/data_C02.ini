; PyCBC configuration for CBC searches on cleaned O2 data

[workflow]
; http://ligo-cbc.github.io/pycbc/latest/html/workflow/initialization.html
h1-channel-name = H1:DCH-CLEAN_STRAIN_C02
l1-channel-name = L1:DCH-CLEAN_STRAIN_C02
v1-channel-name = V1:Hrec_hoft_V1O2Repro1A_16384Hz

[workflow-ifos]
h1 =
l1 =
v1 =

[workflow-datafind]
; http://ligo-cbc.github.io/pycbc/latest/html/workflow/datafind.html
datafind-h1-frame-type = H1_CLEANED_HOFT_C02
datafind-l1-frame-type = L1_CLEANED_HOFT_C02
datafind-v1-frame-type = V1O2Repro1A

[workflow-segments]
; http://ligo-cbc.github.io/pycbc/latest/html/workflow/segments.html
segments-h1-science-name = H1:DCH-CLEAN_SCIENCE_C02:1
segments-l1-science-name = L1:DCH-CLEAN_SCIENCE_C02:1
segments-v1-science-name = V1:ITF_SCIENCE:2
segments-database-url = https://segments.ligo.org

; veto_definer file segment number to exclude from science time
segments-science-veto = 1
; veto_definer file types to exclude from final analysis
segments-final-veto-group = 12H
; addition veto combinations to create during analysis
segments-veto-groups =

; all O2 file for C02 data
segments-veto-definer-url = https://git.ligo.org/detchar/veto-definitions/raw/edf19cf3bed4a65708d553bdb822bd08491b8a19/cbc/O2/H1L1V1-CBC_VETO_DEFINER_C02_O2_1164556817-23176801.xml

[datafind]
urltype = file
